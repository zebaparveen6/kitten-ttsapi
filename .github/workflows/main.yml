name: Kitten TTS API

on:
  repository_dispatch:
    types: [start_ollama]

jobs:
  run-tts:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Python with caching enabled
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"   # <-- Enables pip caching

      # If you have requirements.txt (best practice)
      - name: Install dependencies
        if: hashFiles('**/requirements.txt') != ''
        run: pip install -r requirements.txt

      # Else, install manually
      - name: Install KittenTTS
        run: |
          pip install --upgrade pip
          pip install kittentts  # if from PyPI
          # OR if it's local in your repo:
          # pip install -e .

      # Debug to confirm what's installed
      - name: List installed packages
        run: pip list

      # Debug: print received dispatch payload
      - name: Print dispatch payload
        run: echo "${{ toJson(github.event.client_payload) }}"

      # Run your script
      - name: Run TTS
        run: |
          python - <<'EOF'
          import sys, json, os
          import kittentts

          payload = json.loads("""${{ toJson(github.event.client_payload) }}""")
          print("ðŸ”Ž Payload received:", payload)

          # Example usage
          text = payload.get("original_message", "Hello from GitHub Actions")
          tts = kittentts.TTS()
          tts.speak(text, output="tts_output.wav")
          EOF

      # Send to Telegram
      - name: Send Voice to Telegram
        run: |
          curl -s -X POST \
            -H "Content-Type: multipart/form-data" \
            -F chat_id="${{ github.event.client_payload.telegram_chat_id }}" \
            -F voice="@tts_output.wav" \
            "https://api.telegram.org/bot8276916788:AAFqYhxqLjQMtw6BTmFzMf1AyYHWDhDVhtA/sendVoice"
