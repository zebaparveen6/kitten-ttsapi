name: TTS via repository_dispatch (Cached Efficient)

on:
  repository_dispatch:
    types: [start_ollama]

jobs:
  tts_and_respond:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-

      - name: Install Python dependencies
        run: |
          pip install soundfile
          pip install https://github.com/KittenML/KittenTTS/releases/download/0.1/kittentts-0.1.0-py3-none-any.whl
          pip install requests

      - name: Debug: Show received payload
        run: |
          echo "CHAT_ID: ${{ github.event.client_payload.telegram_chat_id }}"
          echo "ORIGINAL_MSG: ${{ github.event.client_payload.original_message }}"
          echo "VOICE: ${{ github.event.client_payload.voice || 'expr-voice-2-f' }}"

      - name: Generate TTS audio
        run: |
          python - << 'EOF'
          import os, soundfile as sf
          from kittentts import KittenTTS

          chat_id = os.environ["CHAT_ID"]
          text = os.environ["ORIG_MSG"]
          voice = os.environ.get("VOICE", "expr-voice-2-f")

          fname = "tts_output.wav"
          m = KittenTTS("KittenML/kitten-tts-nano-0.1")
          audio = m.generate(text, voice=voice)
          sf.write(fname, audio, 24000)
          print(f"Done: Created {fname}")
          EOF
        env:
          CHAT_ID: ${{ github.event.client_payload.telegram_chat_id }}
          ORIG_MSG: ${{ github.event.client_payload.original_message }}
          VOICE: ${{ github.event.client_payload.voice }}

      - name: Send voice to Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ github.event.client_payload.telegram_chat_id }}
        run: |
          curl -s -X POST \
            -H "Content-Type: multipart/form-data" \
            -F chat_id="$CHAT_ID" \
            -F voice="@tts_output.wav" \
            "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendVoice"
